{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "stas",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.stas",
					"match": "(?<!\\S)(if|else|elif|while|break|continue|ret)(?!\\S)"
				},
				{
					"name": "keyword.stas",
					"match": "(?<!\\S)(fn|argc|argv|swap|dup|over|over2|rot|rot4|drop|w8|w16|w32|w64|r8|r16|r32|r64|syscall0|syscall1|syscall2|syscall3|syscall4|syscall5|syscall6|_breakpoint|assert|const|auto|reserve|pop|include|addr)(?!\\S)"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.stas",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.stas",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.stas",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.stas",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.literal.stas",
					"begin": "`",
					"end": "`",
					"patterns": [
						{
							"name": "constant.character.escape.stas",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"comments": {
			"name": "comment.line.stas",
			"begin": "(?<!\\S);",
			"end": "$"
		},
		"numbers": {
			"name": "constant.numeric.integer.stas",
			"match": "(?<!\\S)\\-?(\\d+)(?!\\S)"
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.arithmetic.stas",
					"match": "(?<!\\S)(\\+|\\-|\\*|\\/|\\%|\\%\\%|\\+\\+|\\-\\-|\\>\\>|\\<\\<)(?!\\S)"
				},
				{
					"name": "keyword.operator.relation.stas",
					"match": "(?<!\\S)(\\=|\\!\\=|\\>|\\<|\\>\\=|\\<\\=|\\>s|\\<s|\\>\\=s|\\<\\=s)(?!\\S)"
				},
				{
					"name": "keyword.operator.bitwise.stas",
					"match": "(?<!\\S)(\\&|\\||\\^|\\~)(?!\\S)"
				},
				{
					"name": "keyword.operator.logical.stas",
					"match": "(?<!\\S)(\\!)(?!\\S)"
				},
				{
					"name": "keyword.operator.arrow.stas",
					"match": "(?<!\\S)(-\\>)(?!\\S)"
				}
			]
		}
	},
	"scopeName": "source.stas"
}